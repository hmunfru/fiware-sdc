<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.telefonica.euro_iaas</groupId>
    <artifactId>sdc-server</artifactId>
    <packaging>pom</packaging>
    <name>sdc-server</name>
    <version>2.1.1-SNAPSHOT</version>


    <properties>

        <!-- TDigital PROPERTIES -->
        <!-- This properties will be added to sonar as manual measures -->
        <product.area.name>Industrial IoT</product.area.name>
        <product.name>FIWARE</product.name>
        <product.release>3.2.3</product.release>

        <repoName>fiware-sdc</repoName>

        <scmURI>git@github.com:telefonicaid</scmURI>
        <ciURI>http://ci-fiware-01.hi.inet</ciURI>
        <nexusURI>http://130.206.80.169</nexusURI>
        <issueURI>https://jirapdi.tid.es/browse</issueURI>
        <nexusRepositories>${nexusURI}/nexus/content/repositories</nexusRepositories>
        <continousIntegrationSystemUrl>${ciURI}/jenkins</continousIntegrationSystemUrl>
        <continousIntegrationSystemProjectName>${repoName}</continousIntegrationSystemProjectName>


        <!-- repositories for distribution -->
        <!-- snapshots -->
        <repoMavenSnapshotId>repo-snapshot</repoMavenSnapshotId>
        <repoMavenSnapshotName>repo-snapshot</repoMavenSnapshotName>
        <repoMavenSnapshotUrl>${nexusRepositories}/snapshots</repoMavenSnapshotUrl>
        <!-- releases -->
        <repoMavenId>repo-release</repoMavenId>
        <repoMavenName>repo-release</repoMavenName>
        <repoMavenUrl>${nexusRepositories}/releases</repoMavenUrl>
        <!-- thirdparty -->
        <repoMavenThirdpartyId>repo-third-party-release</repoMavenThirdpartyId>
        <repoMavenThirdpartyName>repo-third-party-release</repoMavenThirdpartyName>
        <repoMavenThirdpartyUrl>${nexusRepositories}/thirdparty</repoMavenThirdpartyUrl>
        <!-- site -->
        <repoSiteId>nexus-site-repository</repoSiteId>
        <repoSiteName>repo-site</repoSiteName>
        <repoSiteUrl>${ciURI}</repoSiteUrl>


        <!-- encoding -->

        <encoding>utf-8</encoding>
        <encoding.build.source>${encoding}</encoding.build.source>
        <encoding.report.out>${encoding}</encoding.report.out>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>


        <!-- plugins versions -->

        <maven-site-plugin.version>2.2</maven-site-plugin.version>
        <cobertura-maven-plugin.version>2.6</cobertura-maven-plugin.version>
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>


        <compilerInfoDebug>false</compilerInfoDebug>
        <compilerOptimize>false</compilerOptimize>
        <compilerShowWarnings>true</compilerShowWarnings>
        <compilerShowDeprecation>true</compilerShowDeprecation>

        <jersey.version>1.17.1</jersey.version>

        <!-- hibernate -->
        <hibernate.version>4.1.8.Final</hibernate.version>
        <hibernate-jpa-api.version>1.0.1.Final</hibernate-jpa-api.version>
        <hsqldb.version>2.2.8</hsqldb.version>
        <spring.version>3.1.0.RELEASE</spring.version>
        <spring-data-jpa.version>1.4.3.RELEASE</spring-data-jpa.version>
        <springdata.commons.version>1.6.3.RELEASE</springdata.commons.version>

        <seleniumserver.version>2.19.0</seleniumserver.version>
        <copyright.year>2012</copyright.year>
        <junit.version>4.11</junit.version>
        <jmock.version>2.5.1</jmock.version>
        <jvm.version>1.6</jvm.version>
        <tomcat.version>6</tomcat.version>
        <tomcat.home>/usr/share/tomcat${tomcat.version}</tomcat.home>
        <maven-surefire-plugin.version>2.12.2</maven-surefire-plugin.version>

        <!-- Release generation -->
        <maven-jgitflow-plugin.version>1.0-alpha21.1</maven-jgitflow-plugin.version>
        <maven-license-plugin.version>1.2.5</maven-license-plugin.version>

        <!-- sonar -->
        <jacoco-maven-plugin.version>0.6.3.201306030806</jacoco-maven-plugin.version>
        <!--     <sonar.jacoco.reportPath>${project.build.directory}/jacoco-unit.exec</sonar.jacoco.reportPath>
             <sonar.jacoco.itReportPath>${project.build.directory}/jacoco-it.exec</sonar.jacoco.itReportPath>
             <sonar.jacoco.jar>${basedir}/lib/org.jacoco.agent-0.5.10.201208310627-runtime.jar</sonar.jacoco.jar>
            -->

    </properties>

    <scm>
        <connection>scm:git:${scmURI}/${repoName}.git</connection>
        <developerConnection>scm:git:${scmURI}/${repoName}.git</developerConnection>
        <url>${scmURI}/${repoName}.git</url>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <name>Jesus Movilla</name>
            <timezone>+1</timezone>
            <id>jmms392</id>
            <roles>
                <role>soft. developer</role>
            </roles>
        </developer>
        <developer>
            <name>Sergio Arroyo</name>
            <email>sergio.arroyo@tic.alten.es</email>
            <timezone>+1</timezone>
            <id>sa245</id>
            <roles>
                <role>soft. developer</role>
            </roles>
        </developer>
    </developers>


    <issueManagement>
        <system>Jira</system>
        <url>${issueURI}/CLAUDIA</url>
    </issueManagement>


    <dependencyManagement>
        <dependencies>


            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>1.9.5</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-client</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.jersey.contribs</groupId>
                <artifactId>jersey-multipart</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-json</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>com.telefonica.euro_iaas</groupId>
                <artifactId>commons-dao</artifactId>
                <version>1.2.2</version>
            </dependency>
            <dependency>
                <groupId>com.telefonica.euro_iaas</groupId>
                <artifactId>commons-properties</artifactId>
                <version>1.1.1</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>1.9.5</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <build>
        <finalName>${project.artifactId}</finalName>

        <pluginManagement>
            <plugins>
                <!-- license plugin -->

                <plugin>
                    <groupId>com.google.code.maven-license-plugin</groupId>
                    <artifactId>maven-license-plugin</artifactId>
                    <version>${maven-license-plugin.version}</version>
                    <configuration>
                        <header>src/license/fiware/header.txt</header>
                        <includes>
                            <include>src/main/**/*.java</include>
                            <include>src/test/**/*.java</include>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>

            <!-- jgitflow -->
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>maven-jgitflow-plugin</artifactId>
                <version>${maven-jgitflow-plugin.version}</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <!-- to test a release set to true -->
                    <noDeploy>true</noDeploy>
                    <!-- rse: to avoid tag in master -->
                    <noTag>false</noTag>
                    <!-- rse: to avoid push changes to git -->
                    <!-- <pushChanges>true</pushChanges> -->
                    <!-- rse: To keep release branch -->
                    <keepBranch>true</keepBranch>
                    <!-- rse:  If set to true, the plugin sets the property "performRelease" to true,
                    which activates the profile "release-profile", which is
                    inherited from the super pom -->
                    <useReleaseProfile>false</useReleaseProfile>
                </configuration>
            </plugin>

            <!-- modify compiler options -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${jvm.version}</source>
                    <target>${jvm.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <debug>${compilerInfoDebug}</debug>
                    <optimize>${compilerOptimize}</optimize>
                    <showWarnings>${compilerShowWarnings}</showWarnings>
                    <showDeprecation>${compilerShowDeprecation}</showDeprecation>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${cobertura-maven-plugin.version}</version>
                <configuration>
                    <check>
                        <haltOnFailure>false</haltOnFailure>
                    </check>
                    <instrumentation>
                        <excludes>
                            <exclude>**/main/Bootstrap.class</exclude>
                        </excludes>
                    </instrumentation>
                </configuration>
                <executions>
                    <execution>
                        <id>clean</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>instrument</id>
                        <phase>site</phase>
                        <goals>
                            <goal>instrument</goal>
                            <goal>cobertura</goal>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <artifactId>cobertura</artifactId>
                        <groupId>net.sourceforge.cobertura</groupId>
                        <version>2.0.3</version>
                        <scope>compile</scope>
                        <exclusions>
                            <exclusion>
                                <groupId>com.sun</groupId>
                                <artifactId>tools</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>
    </build>


    <repositories>
        <!-- ci-cpr02 Nexus Repositories -->
        <repository>
            <id>${repoMavenSnapshotId}</id>
            <name>${repoMavenSnapshotName}</name>
            <url>${repoMavenSnapshotUrl}</url>
        </repository>
        <repository>
            <id>${repoMavenId}</id>
            <name>${repoMavenName}</name>
            <url>${repoMavenUrl}</url>
        </repository>
        <repository>
            <id>${repoMavenThirdpartyId}</id>
            <name>${repoMavenThirdpartyName}</name>
            <url>${repoMavenThirdpartyUrl}</url>
        </repository>

        <!-- Remote Repositories -->
        <repository>
            <id>central</id>
            <name>central-repository</name>
            <url>http://repo1.maven.org/maven2</url>
        </repository>
        <repository>
            <id>central2</id>
            <name>central2-repository</name>
            <url>http://repo2.maven.org/maven2</url>
        </repository>

        <!-- SpringSource repositories -->
        <repository>
            <id>com.springsource.repository.libraries.release</id>
            <name>SpringSource Enterprise Bundle Repository - SpringSource Library Releases</name>
            <url>http://repository.springsource.com/maven/libraries/release</url>
        </repository>
        <repository>
            <id>com.springsource.repository.libraries.external</id>
            <name>SpringSource Enterprise Bundle Repository - External Library Releases</name>
            <url>http://repository.springsource.com/maven/libraries/external</url>
        </repository>


        <!-- Restlet repository-->
        <repository>
            <id>maven-restlet</id>
            <name>Public online Restlet repository</name>
            <url>http://maven.restlet.org</url>
        </repository>

    </repositories>


    <pluginRepositories>

        <pluginRepository>
            <id>${repoMavenSnapshotId}</id>
            <name>${repoMavenSnapshotName}</name>
            <url>${repoMavenSnapshotUrl}</url>
        </pluginRepository>
        <pluginRepository>
            <id>${repoMavenId}</id>
            <name>${repoMavenName}</name>
            <url>${repoMavenUrl}</url>
        </pluginRepository>
        <pluginRepository>
            <id>${repoMavenThirdpartyId}</id>
            <name>${repoMavenThirdpartyName}</name>
            <url>${repoMavenThirdpartyUrl}</url>
        </pluginRepository>
        <pluginRepository>
            <id>central</id>
            <name>central-repository</name>
            <url>http://repo1.maven.org/maven2</url>
        </pluginRepository>
        <pluginRepository>
            <id>java.net</id>
            <name>java.net</name>
            <url>http://download.java.net/maven/2/</url>
        </pluginRepository>
        <pluginRepository>
            <id>stat-scm</id>
            <name>stat-scm</name>
            <url>http://stat-scm.sourceforge.net/maven2/</url>
        </pluginRepository>
        <pluginRepository>
            <id>codehaus</id>
            <name>codehaus</name>
            <url>http://repository.codehaus.org</url>
        </pluginRepository>


    </pluginRepositories>

    <distributionManagement>

        <!-- RPM Releases Repository -->
        <repository>
            <id>${repoMavenId}</id>
            <name>${repoMavenName}</name>
            <url>${repoMavenUrl}</url>
            <uniqueVersion>false</uniqueVersion>
        </repository>

        <!-- RPM Snapshots Repository -->
        <snapshotRepository>
            <id>${repoMavenSnapshotId}</id>
            <name>${repoMavenSnapshotName}</name>
            <url>${repoMavenSnapshotUrl}</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>

        <!-- Project Site -->
        <site>
            <id>${repoSiteId}</id>
            <name>${repoSiteName}</name>
            <url>${repoSiteUrl}/fiware/${project.artifactId}</url>
        </site>

    </distributionManagement>

    <modules>
        <module>model</module>
        <module>core</module>
        <module>rest-api</module>
        <!--    <module>integration-test</module>    -->
        <module>puppet-wrapper</module>
        <module>client</module>
        <module>migrations</module>
    </modules>
</project>
